{"ast":null,"code":"var _jsxFileName = \"F:\\\\fullstack_open_2022\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = Header;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Button;\nconst Statistic = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.name, \" \", props.value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Statistic;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n  const calculateTotal = () => {\n    return good + bad + neutral;\n  };\n  const calculateAverage = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"all\",\n      value: calculateTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"average\",\n      value: (good + neutral + bad) / 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"positive\",\n      value: good / (good + neutral + bad) + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistic\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Header","props","text","Button","handleClick","Statistic","name","value","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","handleNeutralClick","handleBadClick","calculateTotal","calculateAverage"],"sources":["F:/fullstack_open_2022/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = (props) => {\n  return <h1>{props.text}</h1>\n}\n\nconst Button = (props) => {\n  return <button onClick={props.handleClick}>{props.text}</button>\n}\n\nconst Statistic = (props) => {\n  return <div> {props.name} {props.value} </div>\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n  const calculateTotal = () => {\n    return good + bad + neutral\n  }\n\n  const calculateAverage = () => {\n\n  }\n\n\n  return (\n    <div>\n      <Header text=\"give feedback\"/>\n      <Button handleClick={handleGoodClick} text=\"good\"/>\n      <Button handleClick={handleNeutralClick} text=\"neutral\"/>\n      <Button handleClick={handleBadClick} text=\"bad\"/>\n      <Header text=\"statistics\"/>\n      <Statistic name=\"good\" value={good}/>\n      <Statistic name=\"neutral\" value={neutral}/>\n      <Statistic name=\"bad\" value={bad}/>\n      <Statistic name=\"all\" value={calculateTotal}/>\n      <Statistic name=\"average\" value={(good + neutral + bad)/3}/>\n      <Statistic name=\"positive\" value={good/(good + neutral + bad) + \"%\"}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}