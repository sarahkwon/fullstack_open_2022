{"ast":null,"code":"var _jsxFileName = \"F:\\\\fullstack_open_2022\\\\part1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n// const Header = (props) => {\n//   return (\n//     <>\n//       <h1>{props.course}</h1>\n//     </>\n//   )\n// }\n\n// const Content = (props) => {\n//   return (\n//     <>\n//       <Part part={props.parts[0].name} exercises={props.parts[0].exercises}/>\n//       <Part part={props.parts[1].name} exercises={props.parts[1].exercises}/>\n//       <Part part={props.parts[2].name} exercises={props.parts[2].exercises}/>\n//     </>\n//   )\n// }\n\n// const Part = (props) => {\n//   return (\n//     <p>\n//       {props.part} {props.exercises}\n//     </p>\n//   )\n// }\n\n// const Total = (props) => {\n//   return (\n//     <p>Number of exercises {props.parts[0].exercises + props.parts[1].exercises  + props.parts[2].exercises }</p>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = Display;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nconst App = () => {\n  _s();\n  // const course = 'Half Stack application development'\n  // const parts = [\n  //   {\n  //     name: 'Fundamentals of React',\n  //     exercises: 10\n  //   },\n  //   {\n  //     name: 'Using props to pass data',\n  //     exercises: 7\n  //   },\n  //   {\n  //     name: 'State of a component',\n  //     exercises: 14\n  //   }\n  // ]\n\n  // return (\n  //   <div>\n  //     <Header course={course}/>\n  //     <Content parts={parts}/>\n  //     <Total parts={parts}/>\n  //   </div>\n  // )\n\n  const [counter, setCounter] = useState(0); //counter is assigned 0, setCounter is assigned to a function that will be used to modify the state\n\n  // setTimeout( //function passes 2 parameters: function to increment counter, and timeout of 1 second\n  //   () => setCounter(counter + 1), //this is invoked 1 second after calling setTimeout func\n  //   1000\n  // )\n\n  const increaseByOne = () => {\n    setCounter(counter + 1);\n  };\n  const setToZero = () => setCounter(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      counter: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseByOne,\n      children: \"plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToZero,\n      children: \"zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rU49ahHXqILO256x8h9hfi2uqSs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Display","props","counter","Button","onClick","text","App","setCounter","increaseByOne","setToZero"],"sources":["F:/fullstack_open_2022/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n// const Header = (props) => {\n//   return (\n//     <>\n//       <h1>{props.course}</h1>\n//     </>\n//   )\n// }\n\n// const Content = (props) => {\n//   return (\n//     <>\n//       <Part part={props.parts[0].name} exercises={props.parts[0].exercises}/>\n//       <Part part={props.parts[1].name} exercises={props.parts[1].exercises}/>\n//       <Part part={props.parts[2].name} exercises={props.parts[2].exercises}/>\n//     </>\n//   )\n// }\n\n// const Part = (props) => {\n//   return (\n//     <p>\n//       {props.part} {props.exercises}\n//     </p>\n//   )\n// }\n\n// const Total = (props) => {\n//   return (\n//     <p>Number of exercises {props.parts[0].exercises + props.parts[1].exercises  + props.parts[2].exercises }</p>\n//   )\n// }\n\nconst Display = (props) => {\n  return (\n    <div>{props.counter}</div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick}>\n      {props.text}\n    </button>\n  )\n}\n\nconst App = () => {\n  // const course = 'Half Stack application development'\n  // const parts = [\n  //   {\n  //     name: 'Fundamentals of React',\n  //     exercises: 10\n  //   },\n  //   {\n  //     name: 'Using props to pass data',\n  //     exercises: 7\n  //   },\n  //   {\n  //     name: 'State of a component',\n  //     exercises: 14\n  //   }\n  // ]\n\n  // return (\n  //   <div>\n  //     <Header course={course}/>\n  //     <Content parts={parts}/>\n  //     <Total parts={parts}/>\n  //   </div>\n  // )\n\n  const [ counter, setCounter ] = useState(0) //counter is assigned 0, setCounter is assigned to a function that will be used to modify the state\n\n  // setTimeout( //function passes 2 parameters: function to increment counter, and timeout of 1 second\n  //   () => setCounter(counter + 1), //this is invoked 1 second after calling setTimeout func\n  //   1000\n  // )\n\n  const increaseByOne = () => {\n    setCounter(counter + 1)\n  }\n\n  const setToZero = () => setCounter(0)\n\n  return (\n    <div>\n      <Display counter={counter}/>\n      <button onClick={increaseByOne}>\n        plus\n      </button>\n      <button onClick={setToZero}>\n        zero\n      </button>\n    </div>\n    \n  )\n  \n\n\n}\n\nexport default App\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACzB,oBACE;IAAA,UAAMA,KAAK,CAACC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;AAE9B,CAAC;AAAA,KAJKF,OAAO;AAMb,MAAMG,MAAM,GAAIF,KAAK,IAAK;EACxB,oBACE;IAAQ,OAAO,EAAEA,KAAK,CAACG,OAAQ;IAAA,UAC5BH,KAAK,CAACI;EAAI;IAAA;IAAA;IAAA;EAAA,QACJ;AAEb,CAAC;AAAA,MANKF,MAAM;AAQZ,MAAMG,GAAG,GAAG,MAAM;EAAA;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAAEJ,OAAO,EAAEK,UAAU,CAAE,GAAGR,QAAQ,CAAC,CAAC,CAAC,EAAC;;EAE5C;EACA;EACA;EACA;;EAEA,MAAMS,aAAa,GAAG,MAAM;IAC1BD,UAAU,CAACL,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMO,SAAS,GAAG,MAAMF,UAAU,CAAC,CAAC,CAAC;EAErC,oBACE;IAAA,wBACE,QAAC,OAAO;MAAC,OAAO,EAAEL;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5B;MAAQ,OAAO,EAAEM,aAAc;MAAA,UAAC;IAEhC;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAEC,SAAU;MAAA,UAAC;IAE5B;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAMV,CAAC;AAAA,GArDKH,GAAG;AAAA,MAAHA,GAAG;AAuDT,eAAeA,GAAG;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}